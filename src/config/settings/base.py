"""
Settings files for specific environments are located in the ame directory as this
file.

Generated by 'django-admin startproject' using Django 1.8.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/

"""

from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

ADMINS = (
    ('Default Developer Account', 'devs@asistia.mx'),
    ('Henoc Diaz', 'henoc@asistia.mx'),
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('ASISTIA_SECRET_KEY')

AUTH_USER_MODEL = 'staff.StaffUser'

# Guardian
ANONYMOUS_USER_ID = None

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': os.getenv('ASISTIA_DATABASE_NAME'),
        'USER': os.getenv('ASISTIA_DATABASE_USER'),
        'PASSWORD': os.getenv('ASISTIA_DATABASE_PASSWORD'),
        'HOST': os.getenv('ASISTIA_DATABASE_HOST'),
        'PORT': os.getenv('ASISTIA_DATABASE_PORT')
    }
}


# Application definition

INSTALLED_APPS = (
    'test_without_migrations',
    'collectfast',

    # Built-in apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',

    # Project apps
    'database.clients',
    'database.nurses',
    'database.patients',
    'database.payments',
    'database.reservations',
    'database.staff',
    'database.users',
    'database.reports',
    'database.custom_sql',
    'helpers',
    'message',
    'webapp',
    'api',

    # Third-party apps
    'storages',
    'guardian',
    'annoying',
    'djangobower',
    'pipeline',
    'bootstrap3',
    'djrill',
    'uuslug',
    'sorl.thumbnail',
    'multiselectfield',
    'rest_framework',
    'corsheaders',
    'pymessenger',
)

MIDDLEWARE_CLASSES = (
    'corsheaders.middleware.CorsMiddleware',

    'django.contrib.sessions.middleware.SessionMiddleware',
    'webapp.middleware.ClientTokenMiddleware',

    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'pipeline.middleware.MinifyHTMLMiddleware',
)

AUTHENTICATION_BACKENDS = (
    'webapp.backends.ClientUserBackend',
    'webapp.backends.NurseUserBackend',
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
)

LOGIN_URL = reverse_lazy('login', kwargs={'user_type': 'clientes'})

ROOT_URLCONF = 'config.urls'

# DON'T REMOVE context processors, this could introduce a lot of subtle bugs
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'webapp/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'config.context_processors.base',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'es-MX'

TIME_ZONE = 'America/Mexico_City'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# we don't use collectstatic with dev settings, which means we don't use this directory
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'statics')

STATIC_URL = '/static/'

STATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'webapp/static'),
    os.path.join(os.path.dirname(BASE_DIR), 'components/bower_components'),
)

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'pipeline.finders.PipelineFinder',
    'djangobower.finders.BowerFinder',
)


# Media files
MEDIA_URL = '/media/'


# Settings for Bootstrap3 module
BOOTSTRAP3 = {
    'set_placeholder': False,
}

# Payments
OPENPAY_API_URL = os.getenv('OPENPAY_API_URL')
OPENPAY_PRIVATE_KEY = os.getenv('ASISTIA_OPENPAY_PRIVATE_KEY')
OPENPAY_PUBLIC_KEY = os.getenv('ASISTIA_OPENPAY_PUBLIC_KEY')
OPENPAY_MERCHANT_ID = os.getenv('ASISTIA_OPENPAY_MERCHANT_ID')
CONEKTA_API_KEY = os.getenv('ASISTIA_CONEKTA_API_KEY')
CONEKTA_PUBLIC_API_KEY = os.getenv('ASISTIA_CONEKTA_PUBLIC_API_KEY')

ASISTIA_MIXPANEL_TOKEN = os.getenv('ASISTIA_MIXPANEL_TOKEN')

# Settings for Rollbar module
ROLLBAR = {
    'access_token': os.getenv('ASISTIA_ROLLBAR_KEY'),
    'environment': os.getenv('ASISTIA_ENV', 'development'),
    'branch': 'dev',
    'root': BASE_DIR
}


MESSENGER_BOT_TOKEN = os.getenv('ASISTIA_MESSENGER_BOT_TOKEN')


REDIS_URL = 'redis://:{password}@{host}:{port}/{database}'.format(
    password=os.getenv('ASISTIA_REDIS_PASSWORD'),
    host=os.getenv('ASISTIA_REDIS_HOST'),
    port=os.getenv('ASISTIA_REDIS_PORT'),
    database=os.getenv('ASISTIA_REDIS_DATABASE'),
)
CELERY_RESULT_BACKEND = REDIS_URL
BROKER_URL = REDIS_URL


# the LocMemCache can't be used for collectfast, because it is persisted only in memory
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'
    },
    'collectfast': {
        'BACKEND': 'redis_cache.RedisCache',
        'TIMEOUT': None,
        'LOCATION': '127.0.0.1:{}'.format(os.getenv('ASISTIA_REDIS_PORT')),
        "OPTIONS": {
            "PASSWORD": os.getenv('ASISTIA_REDIS_PASSWORD'),
            "DB": 0,
        }
    },
}

COLLECTFAST_CACHE = 'collectfast'


# list of origin hostnames that are authorized to make cross-site HTTP requests
# https://github.com/ottoyiu/django-cors-headers#cors_origin_whitelist
CORS_ORIGIN_WHITELIST = (
    'staging-home.asistia.co',
    'home.asistia.co',
    'app.instapage.com',
    'www.cuidalos.co',
)

CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
)


SITE_URL_WITHOUT_SCHEME = os.getenv("ASISTIA_SITE_URL")
SITE_URL = "https://{}".format(SITE_URL_WITHOUT_SCHEME)
LOCAL_API_URL = os.getenv('ASISTIA_API_HOST')
ALLOWED_HOSTS = [SITE_URL_WITHOUT_SCHEME, LOCAL_API_URL] # https://docs.djangoproject.com/en/1.8/ref/settings/#allowed-hosts


# contact info
CLIENT_CONTACT_EMAIL = os.getenv("ASISTIA_CLIENT_CONTACT_EMAIL")
NURSE_CONTACT_EMAIL = os.getenv("ASISTIA_NURSE_CONTACT_EMAIL")
CONTACT_PHONE = os.getenv("ASISTIA_CONTACT_PHONE")
CONTACT_ADDRESS = os.getenv("ASISTIA_CONTACT_ADDRESS")


# Autopilot
AUTOPILOT_API_KEY = os.getenv('ASISTIA_AUTOPILOT_API_KEY')
AUTOPILOT_LEAD_CONTACTLIST = os.getenv('ASISTIA_AUTOPILOT_LEAD_CONTACTLIST')
AUTOPILOT_CLIENTS_CONTACTLIST = os.getenv('ASISTIA_AUTOPILOT_CLIENTS_CONTACTLIST')


# messages framework
from django.contrib.messages import constants as message_constants
MESSAGE_TAGS = {
    message_constants.DEBUG: 'debug',
    message_constants.INFO: 'info',
    message_constants.SUCCESS: 'success',
    message_constants.WARNING: 'warning',
    message_constants.ERROR: 'danger',
}


# Google Maps
GOOGLE_MAPS_API_KEY = os.getenv('GOOGLE_MAPS_API_KEY')

FCM_SERVER_API_KEY_NURSE = os.getenv('ASISTIA_FCM_SERVER_API_KEY_NURSE')
FCM_SERVER_API_KEY_CLIENT = os.getenv('ASISTIA_FCM_SERVER_API_KEY_CLIENT')

# applications
NURSE_APP_ANDROID_URL = os.getenv('NURSE_APP_ANDROID_URL')
CLIENT_APP_ANDROID_URL = os.getenv('CLIENT_APP_ANDROID_URL')
NURSE_APP_IOS_URL = os.getenv('NURSE_APP_IOS_URL')
CLIENT_APP_IOS_URL = os.getenv('CLIENT_APP_IOS_URL')


# Settings for dependencies [Keep at the end of file]
from config.settings.dependencies.bower import *
from config.settings.dependencies.pipeline import *
from config.settings.dependencies.celery import *
from config.settings.dependencies.emails import *
from config.settings.dependencies.rest_framework import *
